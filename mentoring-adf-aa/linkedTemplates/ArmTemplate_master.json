{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mentoring-adf-aa"
		},
		"LinkedServiceForBlobStorageAustralia_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceForBlobStorageAustralia'"
		},
		"LinkedServiceForSQLDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceForSQLDatabase'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=azure-mentoring-aa.database.windows.net;Initial Catalog=movies;User ID=anatolii"
		},
		"LinkedServiceParametrized_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceParametrized'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().ServerName};Initial Catalog=@{linkedService().DatabaseName};User ID=anatolii"
		},
		"LinkedServiceToOnlineBlobStorageContainerRawFolderDataLake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceToOnlineBlobStorageContainerRawFolderDataLake'"
		},
		"LinkedServiceDataLakeParametrized_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().StorageURL}"
		},
		"LinkedServiceForAzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mentoring-key-vault-aav2.vault.azure.net/"
		},
		"LinkedServiceForBlobStorage_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "BlobSASURL"
		},
		"LinkedServiceForDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azurementoringdatalakeaa.dfs.core.windows.net/"
		},
		"LinkedServiceToOnlineBlobStorageContainer_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "SASURIforOnlineContainer"
		},
		"LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ConnectionStringToSQLServerWindowsAuthentication"
		},
		"LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "KYIV\\Anatolii_Balakiriev1"
		},
		"LinkedServicetoDataMartSQLDatabase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "DataMartConnectionString"
		},
		"containerUri": {
			"type": "string",
			"metadata": "URI to storage account containing linked ARM templates"
		},
		"containerSasToken": {
			"type": "string",
			"metadata": "Sas token to storage account containing linked ARM templates"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "mentoring-adf-aa_ArmTemplate_0",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-02-01",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[concat(parameters('containerUri'), '/ArmTemplate_0.json', parameters('containerSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"factoryName": {
						"value": "[parameters('factoryName')]"
					},
					"LinkedServiceForBlobStorageAustralia_connectionString": {
						"value": "[parameters('LinkedServiceForBlobStorageAustralia_connectionString')]"
					},
					"LinkedServiceToOnlineBlobStorageContainerRawFolderDataLake_connectionString": {
						"value": "[parameters('LinkedServiceToOnlineBlobStorageContainerRawFolderDataLake_connectionString')]"
					},
					"LinkedServiceForAzureKeyVault_properties_typeProperties_baseUrl": {
						"value": "[parameters('LinkedServiceForAzureKeyVault_properties_typeProperties_baseUrl')]"
					},
					"LinkedServiceForDataLakeStorage_properties_typeProperties_url": {
						"value": "[parameters('LinkedServiceForDataLakeStorage_properties_typeProperties_url')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "mentoring-adf-aa_ArmTemplate_1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-02-01",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[concat(parameters('containerUri'), '/ArmTemplate_1.json', parameters('containerSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"factoryName": {
						"value": "[parameters('factoryName')]"
					},
					"LinkedServiceForSQLDatabase_connectionString": {
						"value": "[parameters('LinkedServiceForSQLDatabase_connectionString')]"
					},
					"LinkedServiceParametrized_connectionString": {
						"value": "[parameters('LinkedServiceParametrized_connectionString')]"
					},
					"LinkedServiceDataLakeParametrized_properties_typeProperties_url": {
						"value": "[parameters('LinkedServiceDataLakeParametrized_properties_typeProperties_url')]"
					},
					"LinkedServiceForBlobStorage_properties_typeProperties_sasUri_secretName": {
						"value": "[parameters('LinkedServiceForBlobStorage_properties_typeProperties_sasUri_secretName')]"
					},
					"LinkedServiceToOnlineBlobStorageContainer_properties_typeProperties_sasUri_secretName": {
						"value": "[parameters('LinkedServiceToOnlineBlobStorageContainer_properties_typeProperties_sasUri_secretName')]"
					},
					"LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_connectionString_secretName": {
						"value": "[parameters('LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_connectionString_secretName')]"
					},
					"LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_userName": {
						"value": "[parameters('LinkedServiceToSQLServerForCinemaTickets_properties_typeProperties_userName')]"
					},
					"LinkedServicetoDataMartSQLDatabase_properties_typeProperties_connectionString_secretName": {
						"value": "[parameters('LinkedServicetoDataMartSQLDatabase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', 'mentoring-adf-aa_ArmTemplate_0')]"
			]
		},
		{
			"name": "mentoring-adf-aa_ArmTemplate_2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-02-01",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[concat(parameters('containerUri'), '/ArmTemplate_2.json', parameters('containerSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"factoryName": {
						"value": "[parameters('factoryName')]"
					}
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', 'mentoring-adf-aa_ArmTemplate_1')]"
			]
		},
		{
			"name": "mentoring-adf-aa_ArmTemplate_3",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-02-01",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[concat(parameters('containerUri'), '/ArmTemplate_3.json', parameters('containerSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"factoryName": {
						"value": "[parameters('factoryName')]"
					}
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', 'mentoring-adf-aa_ArmTemplate_2')]"
			]
		}
	]
}